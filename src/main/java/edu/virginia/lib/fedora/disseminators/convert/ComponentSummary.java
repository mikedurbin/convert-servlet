package edu.virginia.lib.fedora.disseminators.convert;

import java.io.InputStream;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Unmarshaller;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementWrapper;
import javax.xml.bind.annotation.XmlRootElement;

/**
 * A simple JAXB annotated class for the purpose of parsing useful information
 * out of the XML summary of a component that is generated by certain hierarchy
 * participant objects in fedora.
 */
@XmlRootElement(name="component")
public class ComponentSummary {

    public static ComponentSummary parseBreadcrumbs(InputStream is) throws JAXBException {
        JAXBContext jc = JAXBContext.newInstance(ComponentSummary.class);
        Unmarshaller u = jc.createUnmarshaller();
        return (ComponentSummary) u.unmarshal(is);
    }

    @XmlElementWrapper(name="breadcrumbs")
    @XmlElement(name="ancestor")
    public Ancestor[] breadcrumbs;

    @XmlElement
    public String unittitle;

    public String getCollectionPid() {
        if (breadcrumbs == null || breadcrumbs.length == 0) {
            return null;
        }
        return breadcrumbs[0].id;
    }

    public String getCollectionTitle() {
        if (breadcrumbs == null || breadcrumbs.length == 0) {
            return null;
        }
        return breadcrumbs[0].title;
    }

    public String getItemTitle() {
        return unittitle;
    }

    public String toString() {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < breadcrumbs.length; i ++) {
            sb.append(i + ":" + breadcrumbs[i].id + " - " + breadcrumbs[i].title + "\n");
        }
        return sb.toString();
    }

    public static class Ancestor {
        @XmlElement
        public String title;

        @XmlElement
        public String id;
    }
}
